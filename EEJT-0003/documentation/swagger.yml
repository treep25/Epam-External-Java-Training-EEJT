openapi: 3.0.0
info:
  version: '1.0'
  title: REST API Advanced
  description: Documentation REST API
servers:
  - url: http://localhost:8080
paths:
  /certificates:
    post:
      tags:
        - Gift-certificate
      description: Returns created gift-certificate
      summary: Returns created gift-certificate
      operationId: createGiftCertificate
      requestBody:
        description: Gift-certificate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
          links:
            Get gift-certificate by id:
              operationId: getGiftCertificateById
              description: Returns gift-certificate by id
              parameters:
                id: 0
            Get all gift-certificates:
              operationId: getAllGiftCertificates
              parameters:
                page: 0
                size: 20
              description: Returns all gift-certificates
            Update gift-certificate:
              operationId: updatedGiftCertificateById
              parameters:
                id: 0
                name: Gift-certificate
                description: description
                price: 1000
                duration: 10
                tags: some tags
              description: Returns updated gift-certificate; All params are optional
            Update gift-certificate price:
              operationId: updatedPriceGiftCertificateByIdWithPrice
              parameters:
                id: 0
                price: 1000
              description: Returns gift-certificate with new price
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

    get:
      tags:
        - Gift-certificate
      description: Returns all gift-certificate
      summary: Returns a all gift-certificate
      operationId: getAllGiftCertificates
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
          links:
            Get gift-certificate by id:
              operationId: getGiftCertificateById
              description: Returns gift-certificate by id
              parameters:
                id: 0
            Update gift-certificate:
              operationId: updatedGiftCertificateById
              parameters:
                id: 0
                name: Gift-certificate
                description: description
                price: 1000
                duration: 10
                tags: some tags
              description: Returns updated gift-certificate; All params are optional
            Update gift-certificate price:
              operationId: updatedPriceGiftCertificateByIdWithPrice
              parameters:
                id: 0
                price: 1000
              description: Returns updated gift-certificate with price
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /certificates/{id}:
    get:
      tags:
        - Gift-certificate
      description: Returns gift-certificate by ID
      summary: Returns gift-certificate by ID
      operationId: getGiftCertificateById
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
          links:
            Update gift-certificate:
              operationId: updatedGiftCertificateById
              parameters:
                id: 0
                name: Gift-certificate
                description: description
                price: 1000
                duration: 10
                tags: some tags
              description: Returns updated gift-certificate; All params are optional
            Update gift-certificate price:
              operationId: updatedPriceGiftCertificateByIdWithPrice
              parameters:
                id: 0
                price: 1000
              description: Returns updated gift-certificate with price
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

    patch:
      tags:
        - Gift-certificate
      description: Returns updated gift-certificate
      summary: Returns updated gift-certificate
      operationId: updatedGiftCertificateById
      parameters:
        - name: id
          in: path
          description: Gift-Certificate ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Gift-certificate updates you want to make All params are optional
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateBody'
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
          links:
            Get gift-certificate by id:
              operationId: getGiftCertificateById
              description: Returns gift-certificate by id
              parameters:
                id: 0
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

    delete:
      tags:
        - Gift-certificate
      description: Returns no Content
      summary: Returns result deleting by ID
      operationId: deleteGiftCertificateById
      parameters:
        - name: id
          in: path
          description: Gift-Certificate ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: no Content
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error


  /certificates/update-price/{id}:
    patch:
      tags:
        - Gift-certificate
      description: Returns updated gift-certificate with new price
      summary: Returns updated gift-certificate with new price
      operationId: updatedPriceGiftCertificateByIdWithPrice
      parameters:
        - name: id
          in: path
          description: Gift-Certificate ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: integer
              format: int64
              example: 100
        description: new price you want to put
        required: true
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'

          links:
            Get gift-certificate by id:
              operationId: getGiftCertificateById
              description: Returns gift-certificate by id
              parameters:
                id: 0
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /certificates/search/tag-name:
    get:
      tags:
        - Gift-certificate
      description: Returns all gift-certificate by tag`s name
      summary: Returns all gift-certificate by tag`s name
      operationId: searchingByTagName
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
        - name: tagName
          in: query
          description: Name of tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /certificates/search/gift-certificate-name:
    get:
      tags:
        - Gift-certificate
      description: Returns all gift-certificate by gift-certificate`s name
      summary: Returns all gift-certificate by gift-certificate`s name
      operationId: searchingByGiftCertificateName
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
        - name: giftCertificateName
          in: query
          description: Name of giftCertificate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error


  /certificates/search/sort-date:
    get:
      tags:
        - Gift-certificate
      description: Returns all gift-certificates sorted by date
      summary: Returns all gift-certificates sorted by date
      operationId: sortingByDate
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
        - name: sortingDirection
          in: query
          description: ASC/DESC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /certificates/search/tag-name/cost:
    get:
      tags:
        - Gift-certificate
      description: Returns gift-certificate by two tags and price more then
      summary: Returns gift-certificate by two tags and price more then
      operationId: searchingByTagNameAndCost
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
        - name: tagName1
          in: query
          description: name of first tag
          required: true
          schema:
            type: string
        - name: tagName2
          in: query
          description: name of second tag
          required: true
          schema:
            type: string
        - name: cost
          in: query
          description: price more then this value
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /certificates/search/sort-name-date:
    get:
      tags:
        - Gift-certificate
      description: Returns gift-certificates sorted by name and date
      summary: Returns gift-certificates sorted by name and date
      operationId: sortingByNameAndDate
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
        - name: sortingDirection1
          in: query
          description: sorting direction for name
          required: true
          schema:
            type: string
        - name: sortingDirection2
          in: query
          description: sorting direction for date
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gift-certificate'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error
  /tags:
    post:
      tags:
        - Tag
      description: Returns created tag
      summary: Returns created tag
      operationId: createTag
      requestBody:
        description: Tag
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          links:
            DeleteTag:
              operationId: deleteTagById
              parameters:
                id: 0
              description: Returns result of deleting
            GetTagById:
              operationId: getTagById
              parameters:
                id: 0
            GetAllTags:
              operationId: getAllTags
              parameters:
                page: 0
                size: 20
              description: Returns all tags
            MostWidelyUsed:
              operationId: widelyUsedTag
              description: Returns the most widely used tag

        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

    get:
      tags:
        - Tag
      description: Returns all tags
      summary: Returns all tags
      operationId: getAllTags
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          links:
            DeleteTag:
              operationId: deleteTagById
              parameters:
                id: 0
              description: Returns result of deleting
            GetTagById:
              operationId: getTagById
              parameters:
                id: 0
            CreateTag:
              operationId: createTag
              parameters:
                name: new tag name
              description: Returns created tag
            MostWidelyUsed:
              operationId: widelyUsedTag
              description: Returns the most widely used tag
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /tags/{id}:
    get:
      tags:
        - Tag
      description: Returns tag by ID
      summary: Returns tag by ID
      operationId: getTagById
      parameters:
        - name: id
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          links:
            DeleteTag:
              operationId: deleteTagById
              parameters:
                id: 0
              description: Returns result of deleting
            GetAllTags:
              operationId: getAllTags
              parameters:
                page: 0
                size: 20
              description: Returns all tags
            CreateTag:
              operationId: createTag
              parameters:
                name: new tag name
              description: Returns created tag
            MostWidelyUsed:
              operationId: widelyUsedTag
              description: Returns the most widely used tag
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

    delete:
      tags:
        - Tag
      description: Returns result of deleting
      summary: Returns result of deleting
      operationId: deleteTagById
      parameters:
        - name: id
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '204':
          description: no Content
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /tags/widely-used-tag:
    get:
      tags:
        - Tag
      description: Returns the most widely used tag by ID
      summary: Returns the most widely used tag by ID
      operationId: widelyUsedTag
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          links:
            DeleteTag:
              operationId: deleteTagById
              parameters:
                id: 0
              description: Returns result of deleting
            GetAllTags:
              operationId: getAllTags
              parameters:
                page: 0
                size: 20
              description: Returns all tags
            CreateTag:
              operationId: createTag
              parameters:
                name: new tag name
              description: Returns created tag
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error


  /users:
    get:
      tags:
        - Users
      description: Returns all users
      operationId: getAllUsers
      summary: Returns all users
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          links:
            GetUserById:
              operationId: getUserById
              parameters:
                id: 0
              description: Returns user by ID
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /users/{id}:
    get:
      tags:
        - Users
      summary: Returns a user by ID.
      description: Returns user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          links:
            GetAllUsers:
              operationId: getAllUsers
              parameters:
                page: 0
                size: 20
              description: Returns all users
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error


  /orders/{userId}/{giftCertificateId}:
    post:
      tags:
        - Orders
      description: Returns created order
      summary: Returns created order
      operationId: createOrder
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
        - name: giftCertificateId
          in: path
          description: Gift-certificate ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          links:
            GetOrderByOrderId:
              operationId: getOrderById
              parameters:
                orderId: 0
              description: Returns order by ID

            GetAllOrders:
              operationId: getAllOrders
              parameters:
                page: 0
                size: 20
              description: Returns all Orders

        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /orders:
    get:
      tags:
        - Orders
      description: Returns order
      summary: Returns order
      operationId: getAllOrders
      parameters:
        - name: page
          in: query
          description: Page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 20
      responses:
        '200':
          description: Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
                # remake
          links:
            GetOrderByOrderId:
              operationId: getOrderById
              parameters:
                orderId: 0
              description: Returns order by ID

            CreateOrder:
              operationId: createOrder
              parameters:
                userId: 0
                giftCertificateId: 0
              description: Returns created order

        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error

  /orders/{id}:
    get:
      tags:
        - Orders
      description: Returns order by ID
      summary: Returns order by ID
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

          links:
            CreateOrder:
              operationId: createOrder
              parameters:
                userId: 0
                giftCertificateId: 0
              description: Returns created order

            GetAllOrders:
              operationId: getAllOrders
              parameters:
                page: 0
                size: 20
              description: Returns all orders

          description: Status OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity404'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity500'
          description: Server Error


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      required:
        - id
        - name


    Gift-certificate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: integer
          format: int64
        durationDays:
          type: integer
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        createDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
      required:
        - id
        - name
        - description
        - price
        - durationDays
        - createDate
        - lastUpdateDate
    GiftCertificateBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: integer
          format: int64
        durationDays:
          type: integer
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - name
        - description
        - price
        - durationDays


    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name

    TagBody:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cost:
          type: integer
          format: int128
        gift-certificate:
          type: array
          description: Order`s gift-certificate
          items:
            $ref: '#/components/schemas/Gift-certificate'
        purchaseDate:
          type: string
          format: date-time
      required:
        - id
        - cost
        - gift-certificate
        - purchaseDate

    ResponseEntity404:
      type: object
      properties:
        HTTP Status:
          type: string
          enum:
            - 404 NOT_FOUND
        response body:
          type: array
          items:
            $ref: '#/components/schemas/messageResponseNotFound'

    messageResponseNotFound:
      type: object
      properties:
        message:
          type: string
          example: "NOT_FOUND"

    ResponseEntity500:
      type: object
      properties:
        HTTP Status:
          type: string
          enum:
            - 500 INTERNAL_SERVER_ERROR
        response body:
          type: array
          items:
            $ref: '#/components/schemas/messageResponseServerError'

    messageResponseServerError:
      type: object
      properties:
        message:
          type: string
          example: "INTERNAL_SERVER_ERROR"